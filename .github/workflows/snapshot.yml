name: build

on:
  push:
    branches: [ master ]
    paths-ignore:
      - 'README.md'

jobs:
  deploy_snapshot:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - SCALA_VER: "2.12"
            SPARK_VER: "2.4"
          - SCALA_VER: "2.11"
            SPARK_VER: "2.4"

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Before all
        run: |
          chmod +x ./dev/change-scala-version.sh
          ./dev/change-scala-version.sh ${{ matrix.SCALA_VER }}
          docker-compose -f ./dev/docker-compose.yml up -d

      - name: Prepare maven
        env:
          MVN_SETTINGS: ${{ secrets.MVN_SETTINGS }}
          MVN_SECURITY: ${{ secrets.MVN_SECURITY_SETTINGS }}
        run: |
          echo "$MVN_SETTINGS" | base64 -d > "$HOME"/.m2/settings.xml
          echo "$MVN_SECURITY" | base64 -d > "$HOME"/.m2/settings-security.xml

      - name: Run tests
        run: |
          set -e
          export AWS_ACCESS_KEY_ID="fakeAccess"
          export AWS_SECRET_ACCESS_KEY="fakeSecret"
          export AWS_REGION="eu-west-1"
          mvn -B -ntp clean:clean scoverage:report -P snapshot,spark_${{ matrix.SPARK_VER }}

      - name: Upload coverage report
        uses: codecov/codecov-action@v1
        if: ${{ matrix.SPARK_VER == '2.4' && matrix.SCALA_VER == '2.12' }}
        with:
          flags: master
          name: codecov-master-branch

      - name: Deployment
        run: mvn clean deploy scala:doc -ntp -B -DskipTests -P snapshot,spark_${{ matrix.SPARK_VER }}
