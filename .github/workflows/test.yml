name: test

on:
  pull_request:
    branches: [ master ]
  push:
    branches:
      - '!master'

jobs:
  test_setl:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        SCALA_VER: ["2.11", "2.12"]
        SPARK_VER: ["3.0", "2.4", "2.3"]
        exclude:
          - SCALA_VER: 2.12
            SPARK_VER: 2.3
          - SCALA_VER: 2.11
            SPARK_VER: 3.0
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Before all
        run: |
          chmod +x ./dev/test.sh
          chmod +x ./dev/deploy-snapshot.sh
          chmod +x ./dev/deploy-release.sh
          chmod +x ./dev/change-scala-version.sh
          ./dev/change-scala-version.sh ${{ matrix.SCALA_VER }}
          docker-compose -f ./dev/docker-compose.yml up -d
          
      - name: Run tests
        run: |
          set -e
          export AWS_ACCESS_KEY_ID="fakeAccess"
          export AWS_SECRET_ACCESS_KEY="fakeSecret"
          export AWS_REGION="eu-west-1"
          mvn -B -ntp clean:clean scoverage:report -P snapshot,spark_${{ matrix.SPARK_VER }}
        
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        if: ${{ matrix.SPARK_VER == '3.0' && matrix.SCALA_VER == '2.12' }}
        with:
          flags: pr
          name: codecov-pull-request
          
